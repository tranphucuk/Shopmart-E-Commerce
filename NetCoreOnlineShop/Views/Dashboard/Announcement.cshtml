@model NetcoreOnlineShop.Utilities.Dtos.PageResult<NetCoreOnlineShop.Models.Announcements.UserAnnouncement>
@using Microsoft.AspNetCore.Http.Extensions
@using NetCoreOnlineShop.Extensions
@using NetcoreOnlineShop.Utilities.Constants
@{
    ViewData["Keyword"] = "User announcements";
    ViewData["Description"] = "User announcements";
    ViewData["Title"] = "Announcements";

    var listLinks = CommonConstants.listLinks;
}

@section Styles{
    <link href="~/client-side/css/custom/client-side.min.css" rel="stylesheet" />
    <link href="~/client-side/css/custom/wishlist.min.css" rel="stylesheet" />
}
<!-- Breadcrumbs -->

<div class="breadcrumbs">
    <div class="container">
        <div class="row">
            <div class="col-xs-12">
                <ul>
                    <li class="home"> <a title="Go to Home Page" href="/">Home</a><span>&raquo;</span></li>
                    <li><strong>Announcement</strong></li>
                </ul>
            </div>
        </div>
    </div>
</div>
<!-- Breadcrumbs End -->
<!-- Main Container -->
<section class="main-container col2-right-layout">
    <div class="main container">
        <div class="row">
            <div class="col-main col-sm-9 col-xs-12">
                <div class="my-account">
                    <div class="page-title">
                        <h2>Announcement</h2>
                    </div><br />
                    <div class="welcome-msg">
                        <strong>Hello, @User.GetSpecificClaim("FullName")!</strong>
                        <p>From your My Account Dashboard you have the ability to view a snapshot of your announcement details about new policy, system upgrade, sale date,...</p>
                    </div>
                    <div class="title-buttons"><strong>Announcement table</strong></div>
                    <div class="orders-list table-responsive">
                        <!--orders list table-->
                        <table class="table table-bordered cart_summary table-striped">
                            <thead>
                                <tr>
                                    <!--titles for td-->
                                    <th>Id</th>
                                    <th>Title</th>
                                    <th>Date</th>
                                    <th style="text-align:center">Details</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var announ in Model.Results)
                                {
                                    if (announ.HasRead == false)
                                    {
                                        <tr class="unread-read">
                                            <!--order number-->
                                            <td data-title="Order Number">
                                                <a class="order-number">#@announ.Announcement.Id</a>
                                            </td>
                                            <!--Title-->
                                            <td data-title="Order Date">@announ.Announcement.Title</td>
                                            <!--order date-->
                                            <td data-title="Order Date">@announ.DateSent.ToString("MM/dd/yyyy")</td>
                                            <!--order status-->
                                            <td class="a-center last">
                                                <span class="nobr">
                                                    <a href="/announcement-@(announ.Announcement.Id).html">View detail</a>
                                                </span>
                                            </td>
                                        </tr>
                                    }
                                    else
                                    {
                                        <tr>
                                            <!--order number-->
                                            <td data-title="Order Number">
                                                <a class="order-number">#@announ.Announcement.Id</a>
                                            </td>
                                            <!--Title-->
                                            <td data-title="Order Date">@announ.Announcement.Title</td>
                                            <!--order date-->
                                            <td data-title="Order Date">@announ.DateSent.ToString("MM/dd/yyyy")</td>
                                            <!--order status-->
                                            <td class="a-center last">
                                                <span class="nobr">
                                                    <a href="/announcement-@(announ.Announcement.Id).html">View detail</a>
                                                </span>
                                            </td>
                                        </tr>
                                    }
                                }
                            </tbody>
                        </table>
                        @(await Component.InvokeAsync("Pager", Model))
                    </div>
                </div>
            </div>
            <aside class="right sidebar col-sm-3 col-xs-12">
                <div class="sidebar-account block">
                    <div class="sidebar-bar-title">
                        <h3>My Account</h3>
                    </div>
                    <div class="block-content">
                        @{
                            var url = @Context.Request.GetDisplayUrl();
                        }
                        <ul>
                            @foreach (var item in listLinks)
                            {
                                if (url.Contains(item.Url))
                                {
                                    <li class="current"><a href="@item.Url">@item.Name</a></li>
                                }
                                else if (listLinks.Last() == item)
                                {
                                    <li class="last"><a href="@item.Url">@item.Name</a></li>
                                }
                                else
                                {
                                    <li><a href="@item.Url">@item.Name</a></li>
                                }
                            }
                        </ul>
                    </div>
                </div>
                @await Component.InvokeAsync("RightSideBar")
            </aside>
        </div>
    </div>
</section>
<partial name="_ServicePartial">